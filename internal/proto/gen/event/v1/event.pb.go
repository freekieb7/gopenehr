// https://github.com/open-telemetry/opentelemetry-proto/blob/main/opentelemetry/proto/metrics/v1/metrics.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: event/v1/event.proto

package v1

import (
	v11 "github.com/freekieb7/gopenehr/internal/proto/gen/common/v1"
	v1 "github.com/freekieb7/gopenehr/internal/proto/gen/resource/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventsData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ResourceEvents []*ResourceEvent       `protobuf:"bytes,1,rep,name=resource_events,json=resourceEvents,proto3" json:"resource_events,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EventsData) Reset() {
	*x = EventsData{}
	mi := &file_event_v1_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsData) ProtoMessage() {}

func (x *EventsData) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsData.ProtoReflect.Descriptor instead.
func (*EventsData) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{0}
}

func (x *EventsData) GetResourceEvents() []*ResourceEvent {
	if x != nil {
		return x.ResourceEvents
	}
	return nil
}

type ResourceEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resource      *v1.Resource           `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	ScopeEvents   []*ScopeEvent          `protobuf:"bytes,2,rep,name=scope_events,json=scopeEvents,proto3" json:"scope_events,omitempty"`
	SchemaUrl     string                 `protobuf:"bytes,3,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceEvent) Reset() {
	*x = ResourceEvent{}
	mi := &file_event_v1_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceEvent) ProtoMessage() {}

func (x *ResourceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceEvent.ProtoReflect.Descriptor instead.
func (*ResourceEvent) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceEvent) GetResource() *v1.Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ResourceEvent) GetScopeEvents() []*ScopeEvent {
	if x != nil {
		return x.ScopeEvents
	}
	return nil
}

func (x *ResourceEvent) GetSchemaUrl() string {
	if x != nil {
		return x.SchemaUrl
	}
	return ""
}

type ScopeEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scope         *v11.ArchetypeScope    `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	Events        []*Event               `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	SchemaUrl     string                 `protobuf:"bytes,3,opt,name=schema_url,json=schemaUrl,proto3" json:"schema_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScopeEvent) Reset() {
	*x = ScopeEvent{}
	mi := &file_event_v1_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScopeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeEvent) ProtoMessage() {}

func (x *ScopeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeEvent.ProtoReflect.Descriptor instead.
func (*ScopeEvent) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{2}
}

func (x *ScopeEvent) GetScope() *v11.ArchetypeScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *ScopeEvent) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ScopeEvent) GetSchemaUrl() string {
	if x != nil {
		return x.SchemaUrl
	}
	return ""
}

type Event struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are valid to be assigned to Data:
	//
	//	*Event_Observation
	//	*Event_Evaluation
	//	*Event_Instruction
	//	*Event_Action
	Data          isEvent_Data    `protobuf_oneof:"data"`
	Metadata      []*v11.KeyValue `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_event_v1_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{3}
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Event) GetData() isEvent_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Event) GetObservation() *Observation {
	if x != nil {
		if x, ok := x.Data.(*Event_Observation); ok {
			return x.Observation
		}
	}
	return nil
}

func (x *Event) GetEvaluation() *Evaluation {
	if x != nil {
		if x, ok := x.Data.(*Event_Evaluation); ok {
			return x.Evaluation
		}
	}
	return nil
}

func (x *Event) GetInstruction() *Instruction {
	if x != nil {
		if x, ok := x.Data.(*Event_Instruction); ok {
			return x.Instruction
		}
	}
	return nil
}

func (x *Event) GetAction() *Action {
	if x != nil {
		if x, ok := x.Data.(*Event_Action); ok {
			return x.Action
		}
	}
	return nil
}

func (x *Event) GetMetadata() []*v11.KeyValue {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isEvent_Data interface {
	isEvent_Data()
}

type Event_Observation struct {
	Observation *Observation `protobuf:"bytes,3,opt,name=observation,proto3,oneof"`
}

type Event_Evaluation struct {
	Evaluation *Evaluation `protobuf:"bytes,4,opt,name=evaluation,proto3,oneof"`
}

type Event_Instruction struct {
	Instruction *Instruction `protobuf:"bytes,5,opt,name=instruction,proto3,oneof"`
}

type Event_Action struct {
	Action *Action `protobuf:"bytes,6,opt,name=action,proto3,oneof"`
}

func (*Event_Observation) isEvent_Data() {}

func (*Event_Evaluation) isEvent_Data() {}

func (*Event_Instruction) isEvent_Data() {}

func (*Event_Action) isEvent_Data() {}

type Observation struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Attributes        []*v11.KeyValue        `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty"`
	TimestampUnixNano uint64                 `protobuf:"fixed64,2,opt,name=timestamp_unix_nano,json=timestampUnixNano,proto3" json:"timestamp_unix_nano,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Observation) Reset() {
	*x = Observation{}
	mi := &file_event_v1_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Observation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Observation) ProtoMessage() {}

func (x *Observation) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Observation.ProtoReflect.Descriptor instead.
func (*Observation) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{4}
}

func (x *Observation) GetAttributes() []*v11.KeyValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Observation) GetTimestampUnixNano() uint64 {
	if x != nil {
		return x.TimestampUnixNano
	}
	return 0
}

type Instruction struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Attributes        []*v11.KeyValue        `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty"`
	TimestampUnixNano uint64                 `protobuf:"fixed64,2,opt,name=timestamp_unix_nano,json=timestampUnixNano,proto3" json:"timestamp_unix_nano,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Instruction) Reset() {
	*x = Instruction{}
	mi := &file_event_v1_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction) ProtoMessage() {}

func (x *Instruction) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction.ProtoReflect.Descriptor instead.
func (*Instruction) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{5}
}

func (x *Instruction) GetAttributes() []*v11.KeyValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Instruction) GetTimestampUnixNano() uint64 {
	if x != nil {
		return x.TimestampUnixNano
	}
	return 0
}

type Evaluation struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Attributes        []*v11.KeyValue        `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty"`
	TimestampUnixNano uint64                 `protobuf:"fixed64,2,opt,name=timestamp_unix_nano,json=timestampUnixNano,proto3" json:"timestamp_unix_nano,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Evaluation) Reset() {
	*x = Evaluation{}
	mi := &file_event_v1_event_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Evaluation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Evaluation) ProtoMessage() {}

func (x *Evaluation) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Evaluation.ProtoReflect.Descriptor instead.
func (*Evaluation) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{6}
}

func (x *Evaluation) GetAttributes() []*v11.KeyValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Evaluation) GetTimestampUnixNano() uint64 {
	if x != nil {
		return x.TimestampUnixNano
	}
	return 0
}

type Action struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Attributes        []*v11.KeyValue        `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty"`
	TimestampUnixNano uint64                 `protobuf:"fixed64,2,opt,name=timestamp_unix_nano,json=timestampUnixNano,proto3" json:"timestamp_unix_nano,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_event_v1_event_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_event_v1_event_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_event_v1_event_proto_rawDescGZIP(), []int{7}
}

func (x *Action) GetAttributes() []*v11.KeyValue {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Action) GetTimestampUnixNano() uint64 {
	if x != nil {
		return x.TimestampUnixNano
	}
	return 0
}

var File_event_v1_event_proto protoreflect.FileDescriptor

const file_event_v1_event_proto_rawDesc = "" +
	"\n" +
	"\x14event/v1/event.proto\x12\bevent.v1\x1a\x16common/v1/common.proto\x1a\x1aresource/v1/resource.proto\"N\n" +
	"\n" +
	"EventsData\x12@\n" +
	"\x0fresource_events\x18\x01 \x03(\v2\x17.event.v1.ResourceEventR\x0eresourceEvents\"\x9a\x01\n" +
	"\rResourceEvent\x121\n" +
	"\bresource\x18\x01 \x01(\v2\x15.resource.v1.ResourceR\bresource\x127\n" +
	"\fscope_events\x18\x02 \x03(\v2\x14.event.v1.ScopeEventR\vscopeEvents\x12\x1d\n" +
	"\n" +
	"schema_url\x18\x03 \x01(\tR\tschemaUrl\"\x85\x01\n" +
	"\n" +
	"ScopeEvent\x12/\n" +
	"\x05scope\x18\x01 \x01(\v2\x19.common.v1.ArchetypeScopeR\x05scope\x12'\n" +
	"\x06events\x18\x02 \x03(\v2\x0f.event.v1.EventR\x06events\x12\x1d\n" +
	"\n" +
	"schema_url\x18\x03 \x01(\tR\tschemaUrl\"\xd0\x02\n" +
	"\x05Event\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x129\n" +
	"\vobservation\x18\x03 \x01(\v2\x15.event.v1.ObservationH\x00R\vobservation\x126\n" +
	"\n" +
	"evaluation\x18\x04 \x01(\v2\x14.event.v1.EvaluationH\x00R\n" +
	"evaluation\x129\n" +
	"\vinstruction\x18\x05 \x01(\v2\x15.event.v1.InstructionH\x00R\vinstruction\x12*\n" +
	"\x06action\x18\x06 \x01(\v2\x10.event.v1.ActionH\x00R\x06action\x12/\n" +
	"\bmetadata\x18\a \x03(\v2\x13.common.v1.KeyValueR\bmetadataB\x06\n" +
	"\x04data\"r\n" +
	"\vObservation\x123\n" +
	"\n" +
	"attributes\x18\x01 \x03(\v2\x13.common.v1.KeyValueR\n" +
	"attributes\x12.\n" +
	"\x13timestamp_unix_nano\x18\x02 \x01(\x06R\x11timestampUnixNano\"r\n" +
	"\vInstruction\x123\n" +
	"\n" +
	"attributes\x18\x01 \x03(\v2\x13.common.v1.KeyValueR\n" +
	"attributes\x12.\n" +
	"\x13timestamp_unix_nano\x18\x02 \x01(\x06R\x11timestampUnixNano\"q\n" +
	"\n" +
	"Evaluation\x123\n" +
	"\n" +
	"attributes\x18\x01 \x03(\v2\x13.common.v1.KeyValueR\n" +
	"attributes\x12.\n" +
	"\x13timestamp_unix_nano\x18\x02 \x01(\x06R\x11timestampUnixNano\"m\n" +
	"\x06Action\x123\n" +
	"\n" +
	"attributes\x18\x01 \x03(\v2\x13.common.v1.KeyValueR\n" +
	"attributes\x12.\n" +
	"\x13timestamp_unix_nano\x18\x02 \x01(\x06R\x11timestampUnixNanoB\x96\x01\n" +
	"\fcom.event.v1B\n" +
	"EventProtoP\x01Z9github.com/freekieb7/gopenehr/internal/proto/gen/event/v1\xa2\x02\x03EXX\xaa\x02\bEvent.V1\xca\x02\bEvent\\V1\xe2\x02\x14Event\\V1\\GPBMetadata\xea\x02\tEvent::V1b\x06proto3"

var (
	file_event_v1_event_proto_rawDescOnce sync.Once
	file_event_v1_event_proto_rawDescData []byte
)

func file_event_v1_event_proto_rawDescGZIP() []byte {
	file_event_v1_event_proto_rawDescOnce.Do(func() {
		file_event_v1_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_event_v1_event_proto_rawDesc), len(file_event_v1_event_proto_rawDesc)))
	})
	return file_event_v1_event_proto_rawDescData
}

var file_event_v1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_event_v1_event_proto_goTypes = []any{
	(*EventsData)(nil),         // 0: event.v1.EventsData
	(*ResourceEvent)(nil),      // 1: event.v1.ResourceEvent
	(*ScopeEvent)(nil),         // 2: event.v1.ScopeEvent
	(*Event)(nil),              // 3: event.v1.Event
	(*Observation)(nil),        // 4: event.v1.Observation
	(*Instruction)(nil),        // 5: event.v1.Instruction
	(*Evaluation)(nil),         // 6: event.v1.Evaluation
	(*Action)(nil),             // 7: event.v1.Action
	(*v1.Resource)(nil),        // 8: resource.v1.Resource
	(*v11.ArchetypeScope)(nil), // 9: common.v1.ArchetypeScope
	(*v11.KeyValue)(nil),       // 10: common.v1.KeyValue
}
var file_event_v1_event_proto_depIdxs = []int32{
	1,  // 0: event.v1.EventsData.resource_events:type_name -> event.v1.ResourceEvent
	8,  // 1: event.v1.ResourceEvent.resource:type_name -> resource.v1.Resource
	2,  // 2: event.v1.ResourceEvent.scope_events:type_name -> event.v1.ScopeEvent
	9,  // 3: event.v1.ScopeEvent.scope:type_name -> common.v1.ArchetypeScope
	3,  // 4: event.v1.ScopeEvent.events:type_name -> event.v1.Event
	4,  // 5: event.v1.Event.observation:type_name -> event.v1.Observation
	6,  // 6: event.v1.Event.evaluation:type_name -> event.v1.Evaluation
	5,  // 7: event.v1.Event.instruction:type_name -> event.v1.Instruction
	7,  // 8: event.v1.Event.action:type_name -> event.v1.Action
	10, // 9: event.v1.Event.metadata:type_name -> common.v1.KeyValue
	10, // 10: event.v1.Observation.attributes:type_name -> common.v1.KeyValue
	10, // 11: event.v1.Instruction.attributes:type_name -> common.v1.KeyValue
	10, // 12: event.v1.Evaluation.attributes:type_name -> common.v1.KeyValue
	10, // 13: event.v1.Action.attributes:type_name -> common.v1.KeyValue
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_event_v1_event_proto_init() }
func file_event_v1_event_proto_init() {
	if File_event_v1_event_proto != nil {
		return
	}
	file_event_v1_event_proto_msgTypes[3].OneofWrappers = []any{
		(*Event_Observation)(nil),
		(*Event_Evaluation)(nil),
		(*Event_Instruction)(nil),
		(*Event_Action)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_event_v1_event_proto_rawDesc), len(file_event_v1_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_v1_event_proto_goTypes,
		DependencyIndexes: file_event_v1_event_proto_depIdxs,
		MessageInfos:      file_event_v1_event_proto_msgTypes,
	}.Build()
	File_event_v1_event_proto = out.File
	file_event_v1_event_proto_goTypes = nil
	file_event_v1_event_proto_depIdxs = nil
}
