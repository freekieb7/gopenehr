// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: collector/event/v1/event_service.proto

package v1

import (
	v1 "github.com/freekieb7/gopenehr/internal/proto/gen/event/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExportEventsServiceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An array of ResourceEvents.
	// For data coming from a single resource this array will typically contain one
	// element. Intermediary nodes (such as OpenTelemetry Collector) that receive
	// data from multiple origins typically batch the data before forwarding further and
	// in that case this array will contain multiple elements.
	Data          *v1.EventsData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportEventsServiceRequest) Reset() {
	*x = ExportEventsServiceRequest{}
	mi := &file_collector_event_v1_event_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportEventsServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportEventsServiceRequest) ProtoMessage() {}

func (x *ExportEventsServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_collector_event_v1_event_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportEventsServiceRequest.ProtoReflect.Descriptor instead.
func (*ExportEventsServiceRequest) Descriptor() ([]byte, []int) {
	return file_collector_event_v1_event_service_proto_rawDescGZIP(), []int{0}
}

func (x *ExportEventsServiceRequest) GetData() *v1.EventsData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ExportEventsServiceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The details of a partially successful export request.
	//
	// If the request is only partially accepted
	// (i.e. when the server accepts only parts of the data and rejects the rest)
	// the server MUST initialize the `partial_success` field and MUST
	// set the `rejected_<signal>` with the number of items it rejected.
	//
	// Servers MAY also make use of the `partial_success` field to convey
	// warnings/suggestions to senders even when the request was fully accepted.
	// In such cases, the `rejected_<signal>` MUST have a value of `0` and
	// the `error_message` MUST be non-empty.
	//
	// A `partial_success` message with an empty value (rejected_<signal> = 0 and
	// `error_message` = "") is equivalent to it not being set/present. Senders
	// SHOULD interpret it the same way as in the full success case.
	PartialSuccess *ExportEventsPartialSuccess `protobuf:"bytes,1,opt,name=partial_success,json=partialSuccess,proto3" json:"partial_success,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExportEventsServiceResponse) Reset() {
	*x = ExportEventsServiceResponse{}
	mi := &file_collector_event_v1_event_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportEventsServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportEventsServiceResponse) ProtoMessage() {}

func (x *ExportEventsServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_collector_event_v1_event_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportEventsServiceResponse.ProtoReflect.Descriptor instead.
func (*ExportEventsServiceResponse) Descriptor() ([]byte, []int) {
	return file_collector_event_v1_event_service_proto_rawDescGZIP(), []int{1}
}

func (x *ExportEventsServiceResponse) GetPartialSuccess() *ExportEventsPartialSuccess {
	if x != nil {
		return x.PartialSuccess
	}
	return nil
}

type ExportEventsPartialSuccess struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of rejected data points.
	//
	// A `rejected_<signal>` field holding a `0` value indicates that the
	// request was fully accepted.
	RejectedDataPoints int64 `protobuf:"varint,1,opt,name=rejected_data_points,json=rejectedDataPoints,proto3" json:"rejected_data_points,omitempty"`
	// A developer-facing human-readable message in English. It should be used
	// either to explain why the server rejected parts of the data during a partial
	// success or to convey warnings/suggestions during a full success. The message
	// should offer guidance on how users can address such issues.
	//
	// error_message is an optional field. An error_message with an empty value
	// is equivalent to it not being set.
	ErrorMessage  string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportEventsPartialSuccess) Reset() {
	*x = ExportEventsPartialSuccess{}
	mi := &file_collector_event_v1_event_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportEventsPartialSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportEventsPartialSuccess) ProtoMessage() {}

func (x *ExportEventsPartialSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_collector_event_v1_event_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportEventsPartialSuccess.ProtoReflect.Descriptor instead.
func (*ExportEventsPartialSuccess) Descriptor() ([]byte, []int) {
	return file_collector_event_v1_event_service_proto_rawDescGZIP(), []int{2}
}

func (x *ExportEventsPartialSuccess) GetRejectedDataPoints() int64 {
	if x != nil {
		return x.RejectedDataPoints
	}
	return 0
}

func (x *ExportEventsPartialSuccess) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_collector_event_v1_event_service_proto protoreflect.FileDescriptor

const file_collector_event_v1_event_service_proto_rawDesc = "" +
	"\n" +
	"&collector/event/v1/event_service.proto\x12\x12collector.event.v1\x1a\x14event/v1/event.proto\"F\n" +
	"\x1aExportEventsServiceRequest\x12(\n" +
	"\x04data\x18\x01 \x01(\v2\x14.event.v1.EventsDataR\x04data\"v\n" +
	"\x1bExportEventsServiceResponse\x12W\n" +
	"\x0fpartial_success\x18\x01 \x01(\v2..collector.event.v1.ExportEventsPartialSuccessR\x0epartialSuccess\"s\n" +
	"\x1aExportEventsPartialSuccess\x120\n" +
	"\x14rejected_data_points\x18\x01 \x01(\x03R\x12rejectedDataPoints\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage2\x7f\n" +
	"\fEventService\x12o\n" +
	"\fExportEvents\x12..collector.event.v1.ExportEventsServiceRequest\x1a/.collector.event.v1.ExportEventsServiceResponseB\xda\x01\n" +
	"\x16com.collector.event.v1B\x11EventServiceProtoP\x01ZCgithub.com/freekieb7/gopenehr/internal/proto/gen/collector/event/v1\xa2\x02\x03CEX\xaa\x02\x12Collector.Event.V1\xca\x02\x12Collector\\Event\\V1\xe2\x02\x1eCollector\\Event\\V1\\GPBMetadata\xea\x02\x14Collector::Event::V1b\x06proto3"

var (
	file_collector_event_v1_event_service_proto_rawDescOnce sync.Once
	file_collector_event_v1_event_service_proto_rawDescData []byte
)

func file_collector_event_v1_event_service_proto_rawDescGZIP() []byte {
	file_collector_event_v1_event_service_proto_rawDescOnce.Do(func() {
		file_collector_event_v1_event_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_collector_event_v1_event_service_proto_rawDesc), len(file_collector_event_v1_event_service_proto_rawDesc)))
	})
	return file_collector_event_v1_event_service_proto_rawDescData
}

var file_collector_event_v1_event_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_collector_event_v1_event_service_proto_goTypes = []any{
	(*ExportEventsServiceRequest)(nil),  // 0: collector.event.v1.ExportEventsServiceRequest
	(*ExportEventsServiceResponse)(nil), // 1: collector.event.v1.ExportEventsServiceResponse
	(*ExportEventsPartialSuccess)(nil),  // 2: collector.event.v1.ExportEventsPartialSuccess
	(*v1.EventsData)(nil),               // 3: event.v1.EventsData
}
var file_collector_event_v1_event_service_proto_depIdxs = []int32{
	3, // 0: collector.event.v1.ExportEventsServiceRequest.data:type_name -> event.v1.EventsData
	2, // 1: collector.event.v1.ExportEventsServiceResponse.partial_success:type_name -> collector.event.v1.ExportEventsPartialSuccess
	0, // 2: collector.event.v1.EventService.ExportEvents:input_type -> collector.event.v1.ExportEventsServiceRequest
	1, // 3: collector.event.v1.EventService.ExportEvents:output_type -> collector.event.v1.ExportEventsServiceResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_collector_event_v1_event_service_proto_init() }
func file_collector_event_v1_event_service_proto_init() {
	if File_collector_event_v1_event_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_collector_event_v1_event_service_proto_rawDesc), len(file_collector_event_v1_event_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_collector_event_v1_event_service_proto_goTypes,
		DependencyIndexes: file_collector_event_v1_event_service_proto_depIdxs,
		MessageInfos:      file_collector_event_v1_event_service_proto_msgTypes,
	}.Build()
	File_collector_event_v1_event_service_proto = out.File
	file_collector_event_v1_event_service_proto_goTypes = nil
	file_collector_event_v1_event_service_proto_depIdxs = nil
}
